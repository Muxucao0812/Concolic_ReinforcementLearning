[  0]    (= cont1_inv_1 (bv-mul 0b111111111 cont1_0))
[  3]    (= stato_1 0b0000)
[  4]    (= 0b000000 r_in_1)
[  5]    (= cont_1 0b000000)
[  6]    (= cont1_1 0b000000000)
[  7]    (= 0b000000 x_out_1)
[  8]    (= stato_1 0b0000)
[  9]    (= cont_2 0b000000)
[ 10]    (= r_in_2 x_in_1)
[ 11]    (= 0b000000 x_out_2)
[ 12]    (= stato_2 0b0001)
[ 13]    (= stato_2 0b0001)
[ 14]    (= r_in_3 x_in_2)
[ 16]    (= 0b0 stbi_2)
[ 18]    (= stato_3 0b0010)
[ 19]    (= stato_3 0b0010)
[ 21]    (and (or (=> (and (bit r_in_3 1) (bit r_in_3 2)) (not (bit r_in_3 0))) (=> (and (bit r_in_3 4) (bit r_in_3 5)) (not (bit r_in_3 3)))) (or (or (bit r_in_3 0) (or (bit r_in_3 1) (bit r_in_3 2))) (or (bit r_in_3 3) (or (bit r_in_3 4) (bit r_in_3 5)))))
[ 29]    (bv-lt 0b011010 r_in_3)
[ 31]    (= stato_4 0b0001)
[ 13]    (= stato_4 0b0001)
[ 14]    (= r_in_4 x_in_4)
[ 15]    (= stbi_4 0b1)
[ 17]    (= stato_5 0b0001)
[ 13]    (= stato_5 0b0001)
[ 14]    (= r_in_5 x_in_5)
[ 16]    (= 0b0 stbi_5)
[ 18]    (= stato_6 0b0010)
[ 19]    (= stato_6 0b0010)
[ 21]    (and (or (=> (and (bit r_in_5 1) (bit r_in_5 2)) (not (bit r_in_5 0))) (=> (and (bit r_in_5 4) (bit r_in_5 5)) (not (bit r_in_5 3)))) (or (or (bit r_in_5 0) (or (bit r_in_5 1) (bit r_in_5 2))) (or (bit r_in_5 3) (or (bit r_in_5 4) (bit r_in_5 5)))))
[ 29]    (bv-lt 0b011010 r_in_5)
[ 31]    (= stato_7 0b0001)
[ 13]    (= stato_7 0b0001)
[ 14]    (= r_in_6 x_in_7)
[ 16]    (= 0b0 stbi_7)
[ 18]    (= stato_8 0b0010)
[ 19]    (= stato_8 0b0010)
[ 21]    (and (or (=> (and (bit r_in_6 1) (bit r_in_6 2)) (not (bit r_in_6 0))) (=> (and (bit r_in_6 4) (bit r_in_6 5)) (not (bit r_in_6 3)))) (or (or (bit r_in_6 0) (or (bit r_in_6 1) (bit r_in_6 2))) (or (bit r_in_6 3) (or (bit r_in_6 4) (bit r_in_6 5)))))
[ 29]    (bv-lt 0b011010 r_in_6)
[ 31]    (= stato_9 0b0001)
[ 13]    (= stato_9 0b0001)
[ 14]    (= r_in_7 x_in_9)
[ 15]    (= stbi_9 0b1)
[ 17]    (= stato_10 0b0001)
[ 13]    (= stato_10 0b0001)
[ 14]    (= r_in_8 x_in_10)
[ 16]    (= 0b0 stbi_10)
[ 18]    (= stato_11 0b0010)
[ 19]    (= stato_11 0b0010)
[ 20]    (or (and (and (bit r_in_8 0) (and (bit r_in_8 1) (bit r_in_8 2))) (and (bit r_in_8 3) (and (bit r_in_8 4) (bit r_in_8 5)))) (and (and (not (bit r_in_8 0)) (and (not (bit r_in_8 1)) (not (bit r_in_8 2)))) (and (not (bit r_in_8 3)) (and (not (bit r_in_8 4)) (not (bit r_in_8 5))))))
[ 22]    (bv-lt cont_2 0b011001)
[ 24]    (= cont_3 (bv-add 0b000001 cont_2))
[ 26]    (= cont1_2 (bv-zero-extend r_in_8 3))
[ 27]    (= stato_12 0b1000)
[ 69]    (= stato_12 0b1000)
[ 71]    (bv-sge cont1_2 0b000000000)
[ 73]    (= x_out_3 (bv-extract 5 0 cont1_2))
[ 74]    (= stato_13 0b0001)
[ 13]    (= stato_13 0b0001)
[ 14]    (= r_in_9 x_in_13)
[ 15]    (= stbi_13 0b1)
[ 17]    (= stato_14 0b0001)
[ 13]    (= stato_14 0b0001)
[ 14]    (= r_in_10 x_in_14)
[ 15]    (= stbi_14 0b1)
[ 17]    (= stato_15 0b0001)
[ 13]    (= stato_15 0b0001)
[ 14]    (= r_in_11 x_in_15)
[ 15]    (= stbi_15 0b1)
[ 17]    (= stato_16 0b0001)
[ 13]    (= stato_16 0b0001)
[ 14]    (= r_in_12 x_in_16)
[ 16]    (= 0b0 stbi_16)
[ 18]    (= stato_17 0b0010)
[ 19]    (= stato_17 0b0010)
[ 21]    (and (or (=> (and (bit r_in_12 1) (bit r_in_12 2)) (not (bit r_in_12 0))) (=> (and (bit r_in_12 4) (bit r_in_12 5)) (not (bit r_in_12 3)))) (or (or (bit r_in_12 0) (or (bit r_in_12 1) (bit r_in_12 2))) (or (bit r_in_12 3) (or (bit r_in_12 4) (bit r_in_12 5)))))
[ 29]    (bv-lt 0b011010 r_in_12)
[ 31]    (= stato_18 0b0001)
[ 13]    (= stato_18 0b0001)
[ 14]    (= r_in_13 x_in_18)
[ 16]    (= 0b0 stbi_18)
[ 18]    (= stato_19 0b0010)
[ 19]    (= stato_19 0b0010)
[ 21]    (and (or (=> (and (bit r_in_13 1) (bit r_in_13 2)) (not (bit r_in_13 0))) (=> (and (bit r_in_13 4) (bit r_in_13 5)) (not (bit r_in_13 3)))) (or (or (bit r_in_13 0) (or (bit r_in_13 1) (bit r_in_13 2))) (or (bit r_in_13 3) (or (bit r_in_13 4) (bit r_in_13 5)))))
[ 29]    (bv-lt 0b011010 r_in_13)
[ 31]    (= stato_20 0b0001)
[ 13]    (= stato_20 0b0001)
[ 14]    (= r_in_14 x_in_20)
[ 15]    (= stbi_20 0b1)
[ 17]    (= stato_21 0b0001)
[ 13]    (= stato_21 0b0001)
[ 14]    (= r_in_15 x_in_21)
[ 15]    (= stbi_21 0b1)
[ 17]    (= stato_22 0b0001)
[ 13]    (= stato_22 0b0001)
[ 14]    (= r_in_16 x_in_22)
[ 15]    (= stbi_22 0b1)
[ 17]    (= stato_23 0b0001)
[ 13]    (= stato_23 0b0001)
[ 14]    (= r_in_17 x_in_23)
[ 15]    (= stbi_23 0b1)
[ 17]    (= stato_24 0b0001)
[ 13]    (= stato_24 0b0001)
[ 14]    (= r_in_18 x_in_24)
[ 16]    (= 0b0 stbi_24)
[ 18]    (= stato_25 0b0010)
[ 19]    (= stato_25 0b0010)
[ 21]    (and (or (=> (and (bit r_in_18 1) (bit r_in_18 2)) (not (bit r_in_18 0))) (=> (and (bit r_in_18 4) (bit r_in_18 5)) (not (bit r_in_18 3)))) (or (or (bit r_in_18 0) (or (bit r_in_18 1) (bit r_in_18 2))) (or (bit r_in_18 3) (or (bit r_in_18 4) (bit r_in_18 5)))))
[ 28]    (bv-ge 0b011010 r_in_18)
[ 30]    (= stato_26 0b0011)
[ 32]    (= stato_26 0b0011)
[ 34]    (not (bit r_in_18 0))
[ 36]    (= cont1_3 (bv-zero-extend cont_3 3))
[ 37]    (= stato_27 0b0100)
[  0]    (= cont1_inv_2 (bv-mul 0b111111111 cont1_3))
[ 38]    (= stato_27 0b0100)
[ 40]    (not (bit r_in_18 1))
[ 43]    (= cont1_4 (bv-add (bv-mul 0b111111111 cont1_3) (bv-zero-extend r_in_18 3)))
[ 44]    (= stato_28 0b0110)
[  0]    (= cont1_inv_3 (bv-mul 0b111111111 cont1_4))
[ 51]    (= stato_28 0b0110)
[ 53]    (bv-sge 0b000111111 cont1_4)
[ 56]    (= stato_29 0b0111)
[ 57]    (= stato_29 0b0111)
[ 58]    (and (not (bit r_in_18 2)) (not (bit r_in_18 3)))
[ 60]    (= cont1_5 (bv-add 0b111101011 cont1_4))
[ 68]    (= stato_30 0b1000)
[  0]    (= cont1_inv_4 (bv-mul 0b111111111 cont1_5))
[ 69]    (= stato_30 0b1000)
[ 70]    (bv-slt cont1_5 0b000000000)
[ 72]    (= x_out_4 (bv-extract 5 0 cont1_inv_4))
[ 74]    (= stato_31 0b0001)
