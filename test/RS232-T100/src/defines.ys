(define iRECEIVER_bitCell_cntrH_0 ::(bitvector 4))
(define iRECEIVER_cntr_resetH_0 ::(bitvector 1))
(define iRECEIVER_countH_0 ::(bitvector 1))
(define iRECEIVER_next_state_0 ::(bitvector 3))
(define iRECEIVER_par_dataH_0 ::(bitvector 8))
(define iRECEIVER_rec_datH_0 ::(bitvector 1))
(define iRECEIVER_rec_datSyncH_0 ::(bitvector 1))
(define iRECEIVER_rec_dataH_0 ::(bitvector 8))
(define iRECEIVER_rec_readyH_0 ::(bitvector 1))
(define iRECEIVER_rec_readyH_temp_0 ::(bitvector 1))
(define iRECEIVER_rec_readyInH_0 ::(bitvector 1))
(define iRECEIVER_recd_bitCntrH_0 ::(bitvector 4))
(define iRECEIVER_rstCountH_0 ::(bitvector 1))
(define iRECEIVER_shiftH_0 ::(bitvector 1))
(define rec_dataH_temp_0 ::(bitvector 8))
(define iRECEIVER_state_0 ::(bitvector 3))
(define iXMIT_bitCell_cntrH_0 ::(bitvector 4))
(define iXMIT_bitCountH_0 ::(bitvector 4))
(define iXMIT_countEnaH_0 ::(bitvector 1))
(define iXMIT_ena_bitCountH_0 ::(bitvector 1))
(define iXMIT_load_shiftRegH_0 ::(bitvector 1))
(define iXMIT_next_state_0 ::(bitvector 3))
(define iXMIT_rst_bitCountH_0 ::(bitvector 1))
(define iXMIT_shiftEnaH_0 ::(bitvector 1))
(define iXMIT_state_0 ::(bitvector 3))
(define iXMIT_uart_xmitH_0 ::(bitvector 1))
(define iXMIT_xmitDataSelH_0 ::(bitvector 2))
(define iXMIT_xmit_ShiftRegH_0 ::(bitvector 8))
(define iXMIT_xmit_doneH_0 ::(bitvector 1))
(define iXMIT_xmit_doneInH_0 ::(bitvector 1))
(define rec_dataH_0 ::(bitvector 8))
(define rec_readyH_0 ::(bitvector 1))
(define uart_XMIT_dataH_0 ::(bitvector 1))
(define xmit_doneH_0 ::(bitvector 1))
(define sys_clk_0 ::(bitvector 1))
(define sys_rst_l_0 ::(bitvector 1))
(define uart_REC_dataH_0 ::(bitvector 1))
(define xmitH_0 ::(bitvector 1))
(define xmit_dataH_0 ::(bitvector 8))
(define iRECEIVER_bitCell_cntrH_1 ::(bitvector 4))
(define iRECEIVER_cntr_resetH_1 ::(bitvector 1))
(define iRECEIVER_countH_1 ::(bitvector 1))
(define iRECEIVER_next_state_1 ::(bitvector 3))
(define iRECEIVER_par_dataH_1 ::(bitvector 8))
(define iRECEIVER_rec_datH_1 ::(bitvector 1))
(define iRECEIVER_rec_datSyncH_1 ::(bitvector 1))
(define iRECEIVER_rec_dataH_1 ::(bitvector 8))
(define iRECEIVER_rec_readyH_1 ::(bitvector 1))
(define iRECEIVER_rec_readyH_temp_1 ::(bitvector 1))
(define iRECEIVER_rec_readyInH_1 ::(bitvector 1))
(define iRECEIVER_recd_bitCntrH_1 ::(bitvector 4))
(define iRECEIVER_rstCountH_1 ::(bitvector 1))
(define iRECEIVER_shiftH_1 ::(bitvector 1))
(define rec_dataH_temp_1 ::(bitvector 8))
(define iRECEIVER_state_1 ::(bitvector 3))
(define iXMIT_bitCell_cntrH_1 ::(bitvector 4))
(define iXMIT_bitCountH_1 ::(bitvector 4))
(define iXMIT_countEnaH_1 ::(bitvector 1))
(define iXMIT_ena_bitCountH_1 ::(bitvector 1))
(define iXMIT_load_shiftRegH_1 ::(bitvector 1))
(define iXMIT_next_state_1 ::(bitvector 3))
(define iXMIT_rst_bitCountH_1 ::(bitvector 1))
(define iXMIT_shiftEnaH_1 ::(bitvector 1))
(define iXMIT_state_1 ::(bitvector 3))
(define iXMIT_uart_xmitH_1 ::(bitvector 1))
(define iXMIT_xmitDataSelH_1 ::(bitvector 2))
(define iXMIT_xmit_ShiftRegH_1 ::(bitvector 8))
(define iXMIT_xmit_doneH_1 ::(bitvector 1))
(define iXMIT_xmit_doneInH_1 ::(bitvector 1))
(define rec_dataH_1 ::(bitvector 8))
(define rec_readyH_1 ::(bitvector 1))
(define uart_XMIT_dataH_1 ::(bitvector 1))
(define xmit_doneH_1 ::(bitvector 1))
(define sys_clk_1 ::(bitvector 1))
(define sys_rst_l_1 ::(bitvector 1))
(define uart_REC_dataH_1 ::(bitvector 1))
(define xmitH_1 ::(bitvector 1))
(define xmit_dataH_1 ::(bitvector 8))
(define iRECEIVER_bitCell_cntrH_2 ::(bitvector 4))
(define iRECEIVER_cntr_resetH_2 ::(bitvector 1))
(define iRECEIVER_countH_2 ::(bitvector 1))
(define iRECEIVER_next_state_2 ::(bitvector 3))
(define iRECEIVER_par_dataH_2 ::(bitvector 8))
(define iRECEIVER_rec_datH_2 ::(bitvector 1))
(define iRECEIVER_rec_datSyncH_2 ::(bitvector 1))
(define iRECEIVER_rec_dataH_2 ::(bitvector 8))
(define iRECEIVER_rec_readyH_2 ::(bitvector 1))
(define iRECEIVER_rec_readyH_temp_2 ::(bitvector 1))
(define iRECEIVER_rec_readyInH_2 ::(bitvector 1))
(define iRECEIVER_recd_bitCntrH_2 ::(bitvector 4))
(define iRECEIVER_rstCountH_2 ::(bitvector 1))
(define iRECEIVER_shiftH_2 ::(bitvector 1))
(define rec_dataH_temp_2 ::(bitvector 8))
(define iRECEIVER_state_2 ::(bitvector 3))
(define iXMIT_bitCell_cntrH_2 ::(bitvector 4))
(define iXMIT_bitCountH_2 ::(bitvector 4))
(define iXMIT_countEnaH_2 ::(bitvector 1))
(define iXMIT_ena_bitCountH_2 ::(bitvector 1))
(define iXMIT_load_shiftRegH_2 ::(bitvector 1))
(define iXMIT_next_state_2 ::(bitvector 3))
(define iXMIT_rst_bitCountH_2 ::(bitvector 1))
(define iXMIT_shiftEnaH_2 ::(bitvector 1))
(define iXMIT_state_2 ::(bitvector 3))
(define iXMIT_uart_xmitH_2 ::(bitvector 1))
(define iXMIT_xmitDataSelH_2 ::(bitvector 2))
(define iXMIT_xmit_ShiftRegH_2 ::(bitvector 8))
(define iXMIT_xmit_doneH_2 ::(bitvector 1))
(define iXMIT_xmit_doneInH_2 ::(bitvector 1))
(define rec_dataH_2 ::(bitvector 8))
(define rec_readyH_2 ::(bitvector 1))
(define uart_XMIT_dataH_2 ::(bitvector 1))
(define xmit_doneH_2 ::(bitvector 1))
(define sys_clk_2 ::(bitvector 1))
(define sys_rst_l_2 ::(bitvector 1))
(define uart_REC_dataH_2 ::(bitvector 1))
(define xmitH_2 ::(bitvector 1))
(define xmit_dataH_2 ::(bitvector 8))
(assert (= iRECEIVER_bitCell_cntrH_0 0b0000))
(assert (= iRECEIVER_cntr_resetH_0 0b0))
(assert (= iRECEIVER_countH_0 0b0))
(assert (= iRECEIVER_next_state_0 0b000))
(assert (= iRECEIVER_par_dataH_0 0b00000000))
(assert (= iRECEIVER_rec_datH_0 0b0))
(assert (= iRECEIVER_rec_datSyncH_0 0b0))
(assert (= iRECEIVER_rec_dataH_0 0b00000000))
(assert (= iRECEIVER_rec_readyH_0 0b0))
(assert (= iRECEIVER_rec_readyH_temp_0 0b0))
(assert (= iRECEIVER_rec_readyInH_0 0b0))
(assert (= iRECEIVER_recd_bitCntrH_0 0b0000))
(assert (= iRECEIVER_rstCountH_0 0b0))
(assert (= iRECEIVER_shiftH_0 0b0))
(assert (= rec_dataH_temp_0 0b00000000))
(assert (= iRECEIVER_state_0 0b000))
(assert (= iXMIT_bitCell_cntrH_0 0b0000))
(assert (= iXMIT_bitCountH_0 0b0000))
(assert (= iXMIT_countEnaH_0 0b0))
(assert (= iXMIT_ena_bitCountH_0 0b0))
(assert (= iXMIT_load_shiftRegH_0 0b0))
(assert (= iXMIT_next_state_0 0b000))
(assert (= iXMIT_rst_bitCountH_0 0b0))
(assert (= iXMIT_shiftEnaH_0 0b0))
(assert (= iXMIT_state_0 0b000))
(assert (= iXMIT_uart_xmitH_0 0b0))
(assert (= iXMIT_xmitDataSelH_0 0b00))
(assert (= iXMIT_xmit_ShiftRegH_0 0b00000000))
(assert (= iXMIT_xmit_doneH_0 0b0))
(assert (= iXMIT_xmit_doneInH_0 0b0))
(assert (= rec_dataH_0 0b00000000))
(assert (= rec_readyH_0 0b0))
(assert (= uart_XMIT_dataH_0 0b0))
(assert (= xmit_doneH_0 0b0))

(define iXMIT_next_state_3 ::(bitvector 3))
(define iXMIT_rst_bitCountH_3 ::(bitvector 1))
(define iXMIT_xmit_doneInH_3 ::(bitvector 1))
(define iXMIT_next_state_4 ::(bitvector 3))
(define iXMIT_load_shiftRegH_3 ::(bitvector 1))
